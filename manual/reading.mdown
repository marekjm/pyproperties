#### Loading properties files
###### _version: `0.3.1`_

###### [Index](index.mdown)
----


There are several patterns for loading properties files using just `Properties` class:

_stadard way_

        foo = pyproperties.Properties("/path/to/foo.properties")

&nbsp;

_intruduced in `0.1.5`_

        foo = pyproperties.Properties("/path/to/foo.properties", no_read=True)
        # some stuff being done
        foo.read()

&nbsp;

_third way_

        foo = pyproperties.Properties()
        foo.read("/path/to/foo.properties")


There is another way -- it requires creating `Reader()` instance (which is called by `Properties()` implicitly) and passing it to the properties object.

        reader = pyproperties.Reader("/path/to/foo.properties")
        foo = pyproperties.Properties(reader)


Either way will result with `Properties()` object with exactly the same values.


#### Parser mode

`pyproperties` parser operates in two modes: strict and non-strict. 
This is indicated by a state of `strict` variable (it is `bool` so `True` means `strict` mode and `False` the oposite). 
Parser defaults to _strict_ mode. If you want to read properties in _non-strict_ mode you have to use:

        foo = pyproperties.Properties("/path/to/your/file.properties", strict=False)
        
If you want to change mode after loading file you can use `setstrict()` method.

**NOTE**: both `Reader()` and `Properties()` have the `strict` variable as well as number of helper functions.

----

SEE ALSO:  
[saving](saving.mdown)  
[storing](storing.mdown)  
[keys and values](keys_and_values.mdown)
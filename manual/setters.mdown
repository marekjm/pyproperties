#### Setting a property, updating value of a property
###### _version: `0.3.0`_

###### [Index](index.mdown)
----


`pyproperties` has two setters:


*   `set()` for setting single properties,
*   `sets()` for applying value to groups of pre-set properties,


----

##### `set()` method

`set()` takes single key and single value and applies the pair to the main `properties` dictionary.


----

##### `sets()` method

`sets()` makes use of standard regexp of `pyproperties` when defining list of properties which it will apply a value to. 
It creates a sorted list of all keys matching given pattern.  
Then, it assigns __first__ given __value__ to __first key__ on a list.  

If there are more keys then values __last value is added to any key above the number of values given__. 

----

##### `add()` method

`add()` lets you add a value to already existing group or, if the group does not exist, creates first 
property in this group.

    p = pyproperties.Properties()
    p.get("foo.0")
    ... not available message...

    p.add("foo.*", 'Foo')
    p.get("foo.0")
    'Foo'

Unlike `set()` this method requires a value to be given.

----

SEE ALSO:  
[removers](removers.mdown)  
[getters](getters.mdown)

#### Regular expressions used in `pyproperties` 
###### _version: `0.2.3`_

###### [Index](index.mdown)
----


Regular expressions are used in pyproperties in 
methods working with multiple properties:

*   `gets()`
*   `sets()`
*   `removes()`
*   `pops()`
*   `_getidentifier()`

with groups of properties:

*   `getgroups()`
*   `getsingles()`

with type guessing:

*   `typeguess()`

with type conversion:

*   `_convert()`,
*   `ishex()`,
*   `isoct()`,


----


The first four (`gets()`, `sets()`, `removes()` and `pops()`) are based on the same 
pattern. When you pass identifier of the property as a string it's being 
transformed in such way:


        'customer.*.name'   ->  '^customer\.[a-z0-9_.]*\.name$'


Every `*` character in identifier is replaced by `wildcart_re` string and every `.` in identifier 
is escaped.

        *   ->  [a-z0-9_.-]*
        .   ->  \.


----


There are five regular expressions used in `pyproperties`:

        wildcart_re = "[a-z0-9_.-]*"
        guess_int_re = "^[-]?[0-9]+$"
        guess_hex_re = "^-?(0x)?[0-9a-fA-F]+$"
        guess_oct_re = "^-?(0o)?[0-7]+$"
        guess_float_re = "^[-]?[0-9]*\.[0-9]+$"


----


SEE ALSO:  
[setters](setters.mdown)  
[getters](getters.mdown)  
[removers](removers.mdown)
&nbsp;
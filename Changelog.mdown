#### Changelog file for pyproperties

###### [Release file](./RELEASE.mdown), [Manual](./manual/index.mdown)

**__upd__**: updates in code, dependencies and changes in code and userspace, information about deprecations;  
**__rem__**: what was removed in given release;  
**__new__**: new features of library;  
**__fix__**: list of bug fixes in this release;  

----

#### Version 0.2.3.1.1 (2013.01.30):

* __upd__:  `LoadError` renamed to `ReadError`,
* __upd__:  `wildcart_re` changed from `[a-zA-Z0-9_.-]*` to `[a-zA-Z0-9_.-]+`,


* __fix__:  after using `blank()` `store()` has been raising `StoreError`,
* __fix__:  `read()` was raising errors when path had been not specified before calling it (would fail if path have been set by it),


* __new__:  `values()` method which returns all values contained by properties,


* __rem__:  `getnames()` has been removed - use `keys()` instead,


----


#### Version 0.2.3.1 (2013.01.20):

* __upd__:  `pops()` owns no code by itself - it uses `gets()` and `removes()` as a backend,
* __upd__:  `pops()` and `gets()` no longer return dictionaries - they return list of tuples,
* __upd__:  `_linehaskey()` is now *helper-function* with name `linehaskey()`,
* __upd__:  `_convert()` is now *helper-function* with name `convert()`,
* __upd__:  `getlinekey()` and `getlinevalue()` are now *helper-functions* and have new `strict` argument,
* __upd__:  `_expandidentifier()` moved out of `Properties()` (is now a *helper-function*),
* __upd__: `Properties.getnames()` method is deprecated and will be removed in `0.2.4`: use `keys()` instead,
* __upd__: regular expression patterns for integers and floats are updated to accept preceding and trailing whitespace,
* __upd__: regular expression pattern for indentifier now accpets capital letters,


* __fix__:  `guess_float_re` now matches also floats of form `6.02e-23` and `6.02e23`
* __fix__:  `keys()` (old `getnames()`) is now behaving correctly when `hidden` is passed as `True`,


* __new__:  `Reader()` class,
* __new__:  `listincludes()` method,
* __new__:  `Properties.keys()` method,
* __new__:  `guess_bin_re` regular expression pattern added,
* __new__:  support for binary integers in `convert()`,
* __new__:  `isbin()` *helper-function*,


----


#### Version 0.2.2 (2013.01.06):

* __upd__:  `addcomment()` and `addcomments()` renamed to `comment()` and `comments()` respectively,
* __upd__:  `srcorigin` renamed to `origin_source`,
* __upd__:  `propsorigin` renamed to `origin_properties`,
* __upd__:  `getre()` will be removed in `0.2.3.1` - use `gets()` with `no_expand` argument set to `True`,


* __fix__:  `guess_float_re` now accepts floats of form `6.02e+23`,


* __new__:  `MultipleDeclarationWarning` warning class added,
* __new__:  `Writer` class added,
* __new__:  `addinclude()` method - for placing include directives,
* __new__:  `rminclude()` method - for removing include directives,
* __new__:  `purgeinclude()` method - for removing include directives and all corresponding properties,
* __new__:  `stripinclude()` method - it removes all properties included by a directive but not the directive itself (eg. the directive will be stored not properties),
* __new__:  new unit tests for `save()` and `revert()` added,
* __new__:  unit tests for `addinclude()`, `rminclude()`, `purgeinclude()` and `stripinclude()` added,


* __rem__:  removed deprecated methods `_isvalidline()` and `typeguess()`,


----


#### Version 0.2.1 (2012.12.14):

* __upd__:  mode `strict` defaults to `True`,
* __upd__:  checking line validity is now performed by `_linehaskey()` inside `pyproperties` and `_isvalidline()` becomes deprecated,
* __upd__:  `copy()` uses `merge()` as a backend instead of copying everything by itself,
* __upd__:  `_getidentifier()` renamed to `_expandidentifier()` and does not return compiled pattern,
* __upd__:  `identifier` in `pop()` renamed to `key`,
* __upd__:  `strict` argument removed from `getlinekey()`,
* __upd__:  change in `guess_hex_re` and `guess_oct_re` - `0x` and `0o` prefixes are now mandatory,
* __upd__:  octal numbers are considered groupers by `getgroups()`,
* __upd__:  deprecation of `_isvalidline()` and `typeguess()`,


* __fix__:  changed mistake in [grouping manual](manual/grouping.mdown),
* __fix__:  `removes()` uses `_expandidentifier()` to get pattern for regular expression,
* __fix__:  improved accuracy of `_islinehiddenprop()` by checking if the comment character is not followed by whitespace (` `),


* __new__:  `_linehaskey()` method used for checking if line contains a key,
* __new__:  `_isvalidline()` is deprecated and will issue warnings about that - you should use `_linehaskey()` as it provides better accuracy,
* __new__:  unit tests for `_islinehiddenprop()`,
* __new__:  method `setstrict()` for setting parser mode,


* __rem__:  unit tests for `_isvalidline()` removed (due to its deprecation - it is now only a proxy for `_linehaskey()`)


----


#### Version 0.2.0 (2012.12.16):

* __upd__:  `_convert()` can convert positive and negative hexadecimal and octal integers,
* __upd__:  slight change in regular expression patterns; `[-]?` changed to `-?`,
* __upd__:  `onlyhexchars()` renamed to `ishex()`,
* __upd__:  `getlinekey()` has new `strict` argument (read DOC for more),


* __fix__:  `getlinekey()` is more strict and accurate,


* __new__:  `__vertuple__` variable,
* __new__:  `guess_hex_re` regular expression,
* __new__:  `guess_oct_re` regular expression,
* __new__:  `isoct()` method,
* __new__:  new `_getidentifier()` method for compiling regular expression patterns of identifiers in 
    methods dealing with multiple properties at once (the `-s()` methods),
* __new__:  `_iscommentline()` method,
* __new__:  global `strict` variable (read DOC for `getlinekey()` or [this manual](manual/keys_and_values.mdown) for more information),


----


#### Version 0.1.9 (2012.12.9):

* __upd__:  `_typeguess()` renamed to `typeguess()`,
* __upd__:  `__tcast__()` and `__tcasts__()` renamed to `_tcast()` and `_tcasts()` respectively,
* __upd__:  `_getlinekey()` renamed to `getlinekey()`,
* __upd__:  `_getlinevalue()` renamed to `getlinevalue()`,
* __upd__:  `comment()` renamed to `hide()`,
* __upd__:  `commented` argument in `_include()` renamed to `hidden`,
* __upd__:  `commented` keyword in properties files renamed to `hidden`,
* __upd__:  `commented` internal variable was renamed to `hidden`,
* __upd__:  all `__extract*__` methods were renamed to `_extract*`,
* __upd__:  `__split__()` renamed to `_split()`,
* __upd__:  `__loadf__()` renamed to `_loadf()`,
* __upd__:  `getcomment()` returns a string (lines are joined with unescaped `\n`),
* __upd__:  `remove()` no longer issues KeyErrors,
* __upd__:  `parse()` returns `pyproperties.Properties` object by deafult, functionality for returning simple dict is removed,
* __upd__:  `parseline()` renamed to `_parseline()`,
* __upd__:  `parsed` argument in `get()`, `gets()`, `getre()` renamed to `parse`,
* __upd__:  `_tcast()` now uses `_convert()` as backend (it provides convertion to more types),
* __upd__:  `__loadd__()` renamed to `_loadd()` and issues a warning when used,
* __upd__:  `getlinevalue()` no longer removes backslash preceding whitespace at the beginning of value,


* __fix__:  `hide()` does not allow duplicates,


* __new__:  `set()` now has default value (empty string) for new properties,
* __new__:  `_notavailable()` method which issuse KeyError with appropriate message,
* __new__:  `getcomment()` has new argument - ___`(bool)`___`lines` which will tell it to give you lines (list of strings) instead of string,
* __new__:  `_convert()` method which can convert property from `str` to `bool` (`True` & `False`), `int`, `float`, `None`,
    read `manual/casting.mdown` for more details,


----


#### Version 0.1.8 (2012.12.02):

* __upd__:  `no_source` argument in `store()` renamed to `drop_source`,
* __upd__:  changes in `read()`, it now uses `blank()` to create all initial variables and generate path and name,
* __upd__:  argument `idetifier` in `remove()` renamed to `key` - it only applies to one key, identifiers apply to many keys,


* __fix__:  `reload()` requires `save()`,
* __fix__:  `refresh()` requires `save()`,
* __fix__:  `remove()` removes comment attached to the property from the dict,
* __fix__:  `copy()` now works with files containing commented properties,
* __fix__:  `getnames()` has new argument - `commented` which if set to `True` returns names of commented properties 
    (this fixes situation when you were not able to get names of commented properties at all),


* __new__:  `path` argument in `blank()` method,


----


#### Version 0.1.7 (2012.11.25):

* __upd__:  `__tcasts__()`, `__tcast__()` and `__typeguess__()` were renamed to `_tcast()`, `_tcasts()` and `_typeguess()` respectively,
* __upd__:  `__getkey__()` and `__getvalue__()` were renamed to `_getlinekey()`, `_getlinevalue()`,
* __upd__:  `__isvalidline__()` was renamed to `_isvalidline()`,
* __upd__:  `__iscommentedprop__()` was renamed to `_islinecommentedprop()`,
* __upd__:  `__iscommentedprop__()` was renamed to `_islinecommentedprop()`,
* __upd__:  `__iscommentedprop__()` was renamed to `_islinecommentedprop()`,
* __upd__:  `addcomment()`, `rmcomment()` and `uncomment()` have `self.unsaved = True` line removed because all of these actions implicitly 
    set this variable to `False`
* __upd__:  `__extracteprops__()` and `__extractcommentedprops__()` use `enumerate()` instead of expilict `while` loop,
* __upd__:  `__split__()` use `enumerate()` instead of expilict `while` loop,


* __fix__:  `copy()` copies status (commented/not-commented) of properties,


* __new__:  `no_includes` argument in which tell `read()` whether it should include other files into one that is being loaded or not,
* __new__:  `no_source` argument in `store()` which drops the original source,
* __new__:  unit tests for `__include__` directive,


----


#### Version 0.1.6 (2012.11.18):

* __upd__:  `__extract__()` renamed to `__extractprops__()`
* __upd__:  changed way of compiling regexp idetifiers
* __upd__:  `merge()` renamed to `update()` to have a name which is more accurate,
* __upd__:  `addcomment()` stores plain (without '#' and whitespace on the begining) text,
* __upd__:  `complete()` completes value, comment and status (un/commented) of properties, 
* __upd__:  `rsave()` renamed to `revert()`, 
* __upd__:  because the name was freed `melt()` is now renamed to `merge()`, 
* __upd__:  from now on also `hexadecimal` numbers are considered groupers by the `getgroups()` method, 
* __upd__:  updated old regexp in `__tcasts__()` method, 
* __upd__:  pyproperties will warn user if there are duplicates in loaded file, if they are found only last value if loaded


* __fix__:  `_storesrc()` takes values from `propsorigin` and not `properties`
* __fix__:  when searching for comments `__extractcomments__()` will not wrap around the file end 
    (bug fixed but not listed in version 0.1.5),
* __fix__:  comments have origin-style variable now: `origin_propcomments`, 
* __fix__:  save now saves `origin_propcomments`, 
* __fix__:  `__extractcomments__()` saves also to `origin_propcomments`, 
* __fix__:  `complete()` and `merge()` are now taking props from the `origins` variables, 
* __fix__:  fixed a bug in storing procedure which would crash the process if some properties from original file were removed, 


* __new__:  `__extractcommentedprops__()` method, read `manual/commenting.txt` to learn more
* __new__:  `comment()` and `uncomment()` methods added, read `manual/commenting.txt` to learn more
* __new__:  `comments()` and `uncomments()` methods added, read `manual/commenting.txt` to learn more
* __new__:  unit tests for comments added,
* __new__:  `_storeprop()` method which generate lines for single property, saved a few lines with this reusable code,


----


#### Version 0.1.5 (2012.11.11):

* __upd__:  `addcomment()` takes list of strings as an argument, read DOC for more


* __fix__:  fixed regexp used in multi- methods (they were not catching properties whose names contained '-' inside)


* __new__:  `store()` has new submethod: `_dump()` which takes previously generated lines and writes them to file; read DOC for more,
* __new__:  `store()` accepts `no_dump` argument which tells it to finish after generating lines,
* __new__:  `__init__()` accepts `no_read` argument which tells it to dont't read the file of specified path, creates blank props with set path
* __new__:  `__extractcomments__()` method which cuts comments out from the source and saves them to the `propcomments` variable
* __new__:  `getcomment()` method which returns comment of a property
* __new__:  `store()` has new submethod - `_storecomment()` which is responsible for storing comments,
